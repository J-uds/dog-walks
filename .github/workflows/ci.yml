name: DogWalks CI Pipeline

# Triggers - cuándo ejecutar el CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Permite ejecución manual

# Variables globales del pipeline
env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  # Job 1: Tests Unitarios (rápidos)
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: 🧪 Run Unit Tests
        run: |
          echo "🚀 Running unit tests (WalkServiceTest, etc.)"
          mvn clean test -P unit-tests --no-transfer-progress --batch-mode
          echo "✅ Unit tests completed"

      - name: 📊 Upload Unit Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: |
            target/surefire-reports/
            target/site/jacoco/
          retention-days: 30

  # Job 2: Tests de Integración con TestContainers
  integration-tests:
    name: 🐳 Integration Tests with TestContainers
    runs-on: ubuntu-latest
    needs: unit-tests # Solo ejecuta si unit tests pasan

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      # CRÍTICO: TestContainers necesita Docker
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Start Docker service
        run: |
          sudo systemctl start docker
          sudo docker info
          echo "✅ Docker is ready for TestContainers"

      - name: 🗂️ Create test reports directory
        run: mkdir -p target/failsafe-reports

      - name: 🧪 Run Integration Tests with TestContainers
        run: |
          echo "🚀 Running integration tests with TestContainers..."
          echo "  • WalkControllerIntegrationTest"
          echo "  • AuthControllerIntegrationTest" 
          echo "  • AdminControllerIntegrationTest"
          echo "  • CustomUserControllerIntegrationTest"
          
          # Ejecutar tests de integración con TestContainers
          mvn clean verify -P integration-tests \
            --no-transfer-progress \
            --batch-mode \
            -Dspring.profiles.active=test \
            -Dtestcontainers.reuse.enable=false
          
          echo "✅ Integration tests completed"

      - name: 📊 Upload Integration Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            target/failsafe-reports/
            target/site/jacoco/
          retention-days: 30

      - name: 🧹 Cleanup TestContainers
        if: always()
        run: |
          docker container prune -f --filter "label=org.testcontainers" || true
          docker image prune -f || true
          echo "✅ TestContainers cleanup completed"